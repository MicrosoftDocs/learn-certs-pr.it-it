### YamlMime:Course
title: Designing and Implementing Microsoft DevOps solutions
metadata:
  title: 'Course AZ-400T00-A: Designing and Implementing Microsoft DevOps solutions'
  description: 'Course AZ-400T00-A: Designing and Implementing Microsoft DevOps solutions'
uid: course.az-400t00
courseNumber: 'AZ-400T00-A'
hoursToComplete: 120
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: Pianificare la trasformazione con obiettivi e tempistiche condivisi
- skill: Selezionare un progetto e identificare le metriche del progetto e i Key Performance Indicators (KPI)
- skill: Creare un team e una struttura organizzativa agile
- skill: Progettare una strategia di integrazione degli strumenti
- skill: Progettare una strategia di gestione delle licenze (ad esempio, gli utenti di Azure DevOps e GitHub)
- skill: Progettare una strategia per la tracciabilità end-to-end dagli oggetti di lavoro al software di lavoro
- skill: Progettare una strategia di autenticazione e di accesso
- skill: Progettare una strategia per integrare le risorse on-premise e le risorse cloud
- skill: Descrivere i vantaggi dell'utilizzo del controllo alla fonte
- skill: Descrivere Repos Azure e GitHub
- skill: Migrare da TFVC a Git
- skill: Gestire la qualità del codice, incluso il debito tecnico SonarCloud, e altre soluzioni
- skill: Costruire la conoscenza organizzativa sulla qualità del codice
- skill: Spiegare come strutturare i repo Git 
- skill: Descrivere i flussi di lavoro di ramificazione Git
- skill: Richieste di collaborazione e revisione del codice 
- skill: Leva i ganci Git per l'automazione 
- skill: Usare Git per promuovere la fonte interiore in tutta l'organizzazione 
- skill: Spiegare il ruolo di Azure Pipelines e dei suoi componenti
- skill: Configurare gli agenti per l'uso in Azure Pipelines
- skill: Spiegare perché l'integrazione continua è importante 
- skill: Implementare l'integrazione continuativa utilizzando Azure Pipelines
- skill: Definire l'Ingegneria dell'Affidabilità del Sito
- skill: Processi di progettazione per misurare la soddisfazione dell'utente finale e analizzare il feedback degli utenti
- skill: Processi di progettazione per automatizzare l'analisi delle applicazioni
- skill: Gestire gli allarmi e ridurre gli allarmi senza significato e non attivabili
- skill: Realizzare retrospettive irreprensibili e creare una cultura giusta
- skill: Definire un'infrastruttura e una strategia di configurazione e un set di strumenti appropriati per una pipeline di rilascio e un'infrastruttura applicativa
- skill: Implementare la conformità e la sicurezza nella vostra infrastruttura applicativa
- skill: Descrivere le potenziali sfide dell'integrazione di software open-source
- skill: ispezionare i pacchetti software open-source per la sicurezza e la conformità delle licenze
- skill: Gestire le politiche di sicurezza organizzativa e di conformità
- skill: Integrare le scansioni delle licenze e delle vulnerabilità nelle pipeline di costruzione e distribuzione
- skill: Configurare la costruzione di pipeline per accedere alla sicurezza dei pacchetti e alle classificazioni delle licenze
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- advanced
roles:
- devops-engineer
products:
- azure
- azure-devops
- azure-kubernetes-service
- azure-container-instances
- azure-automation
exams:
- uid: exam.az-400
summary: |-
  Questo corso fornisce le conoscenze e le competenze per progettare e implementare processi e pratiche DevOps. Gli studenti impareranno come pianificare DevOps, utilizzare il controllo del codice sorgente, ridimensionare Git per un'azienda, consolidare artefatti, progettare una strategia di gestione delle dipendenze, gestire segreti, implementare l'integrazione continua, implementare una strategia di creazione di container, progettare una strategia di rilascio, impostare un flusso di lavoro per la gestione del rilascio, implementare un modello di distribuzione e ottimizzare i meccanismi di feedback.
  
  #### Profilo dei destinatari
  Gli studenti di questo corso sono interessati a progettare e implementare processi DevOps o a superare l'esame di certificazione Microsoft Azure DevOps Solutions.
prerequisitesSection: |-
  Gli studenti di successo avranno una conoscenza e una buona comprensione di&#58;
  - Concetti di cloud computing, e la comprensione delle implementazioni PaaS, SaaS e IaaS.
  - Sia l'amministrazione di Azure che lo sviluppo su Azure con una comprovata esperienza in almeno uno di questi settori.
  - Controllo delle versioni, sviluppo di software Agile e principi di sviluppo del software di base. Sarebbe utile avere esperienza in un'organizzazione che sviluppa software.
  
  Se non conosci Azure e il cloud computing, considera una delle seguenti risorse&#58;
  - Corso gratuito online&#58; Azure Fundamentals (https://docs.microsoft.com/learn/paths/azure-fundamentals/) 
  - Corso con docente&#58; AZ-900&#58; Azure Fundamentals (https://docs.microsoft.com/learn/certifications/courses/az-900t01)
  
  Se non conosci Azure Administration, prendi in considerazione l'idea di seguire&#58;
  - Gratuitamente online&#58; Prerequisiti per gli Azure Administrators (https://docs.microsoft.com/en-us/learn/paths/az-104-administrator-prerequisites/)
  - Corsi con docente&#58; AZ-104&#58; Microsoft Azure Administrator (https://docs.microsoft.com/en-us/learn/certifications/courses/az-104t00) e AZ-010&#58; Azure Administration for AWS SysOps (https://docs.microsoft.com/en-us/learn/certifications/courses/az-010t00)
  
  Se non conosci Azure Developer, prendi in considerazione l'idea di seguire&#58;
  - Gratuitamente online&#58; Creare applicazioni senza server (https://docs.microsoft.com/en-us/learn/paths/create-serverless-applications/)
  - Corsi con docente&#58; AZ-204&#58; Developing Solutions for Microsoft Azure (https://docs.microsoft.com/en-us/learn/certifications/courses/az-204t00) e AZ-020&#58; Microsoft Azure Solutions for AWS Developers (https://docs.microsoft.com/en-us/learn/certifications/courses/az-020t00)
outlineSection: |-
  ### Modulo 1&#58; Pianificazione per DevOps
  #### Lezioni
  - Pianificazione della trasformazione
  - Selezione dei progetti
  - Strutture del team
  - Migrazione ad Azure DevOps

  #### Laboratorio &#58; Pianificazione agile e gestione del portafoglio con Azure Boards

  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Pianificare la trasformazione con obiettivi e tempistiche condivise
  - Selezionare un progetto e identificare le metriche del progetto e i Key Performance Indicators (KPI)
  - Creare un team e una struttura organizzativa agile
  - Progettare una strategia di integrazione degli strumenti
  - Progettare una strategia di gestione delle licenze (ad esempio, gli utenti di Azure DevOps e GitHub)
  - Progettare una strategia per la tracciabilità end-to-end dagli articoli di lavoro al software di lavoro
  - Progettare una strategia di autenticazione e di accesso
  - Progettare una strategia per l'integrazione delle risorse on-premise e del cloud
  
  
  ### Modulo 2&#58; Introduzione al Source Control
  #### Lezioni
  - Cos'è il Source Control
  - Vantaggi del Source Control
  - Tipi di sistemi di Source Control
  - Introduzione a Azure Repos
  - Introduzione a GitHub
  - Migrazione da Team Foundation Version Control (TFVC) a Git su Azure Repos
  
  #### Laboratorio &#58; Controllo di versione con Git su Azure Repos
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Descrivere i vantaggi dell'utilizzo del Source Control 
  - Descrivere Azure Repos e GitHub
  - Effettuare una migrazione da TFVC a Git
  
  
  ### Modulo 3&#58; Gestione del Debito Tecnico
  #### Lezioni
  - Identificazione del Debito Tecnico
  - Condivisione delle conoscenze all'interno dei Team
  - Modernizzare gli Ambienti di Sviluppo con i Codespaces
  
  #### Laboratorio &#58 Condividere le Conoscenze del Team utilizzando le Azure Project Wiki
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Gestire la qualità del codice, compreso il debito tecnico SonarCloud, e altre soluzioni
  - Raccogliere le conoscenze organizzative sulla qualità del codice
  
  
  ### Modulo 4&#58; Lavorare con Git per DevOps d'Impresa
  #### Lezioni
  - Come strutturare il proprio Git Repo
  - Git Branching Workflow
  - Collaborare con le richieste di ritiro su Azure Repos
  - Perché i Git Hooks sono importanti
  - Favorire le fonti interne
  - Gestione dei repository Git
  
  #### Laboratorio &#58; Controllo di versione con Git su Azure Repos
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Spiegare come strutturare i repo Git 
  - Descrivere i flussi di lavoro ramificati Git
  - Considerare richieste di ritiro per collaborazione e revisioni del codice 
  - Considerare i Git Hooks per l'automazione 
  - Utilizzare Git per favorire le fonti interne in tutta l'organizzazione
  
  
  ### Modulo 5&#58; Configurazione delle Azure Pipelines
  #### Lezioni
  - Il concetto di Pipelines su DevOps
  - Azure Pipelines
  - Valutare l'uso degli agenti ospitati rispetto a quelli Interni
  - Pool di Agenti
  - Pipelines e Concorrenza
  - Azure DevOps e progetti open source (progetti pubblici)
  - Azure Pipelines YAML contro Visual Designer
  
  #### Laboratorio &#58; Configurazione delle piscine per agenti e comprensione degli stili delle condutture
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Spiegare il ruolo di Azure Pipelines e dei suoi componenti
  - Configurare gli agenti per l'uso su Azure Pipelines
  
  
  ### Modulo 6&#58; Implementazione dell'integrazione continua con Azure Pipelines
  #### Lezioni
  - Panoramica dell'integrazione continua
  - Implementazione di una strategia di costruzione
  - Integrazione con Azure Pipelines
  - Integrare il controllo delle sorgenti esterne con le Azure Pipelines
  - Impostazione di Agenti Self-Hosted
  
  #### Laboratorio &#58; Abilitare l'integrazione continua con Azure Pipelines
  
  #### Laboratorio &#58; Integrare il controllo delle sorgenti esterne con Azure Pipelines
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Spiegare perché l'integrazione continua è importante
  - Implementare l'integrazione continuativa utilizzando Azure Pipelines
  
  
  ### Modulo 7&#58; Gestione della Configurazione dell'Applicazione e dei Segreti
  #### Lezioni
  - Introduzione alla Sicurezza
  - Implementazione di un processo di sviluppo sicuro
  - Rimodulare i dati di configurazione dell'applicazione
  - Gestire Segreti, Token e Certificati
  - Integrazione con i Sistemi di Gestione delle Identità
  - Implementazione della Configurazione delle Applicazioni
  
  #### Laboratorio &#58; Integrare Azure Key Vault con Azure DevOps
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Gestire la configurazione dell'applicazione e i segreti
  - Integrare Azure Key Vault con una pipeline
  
  
  ### Modulo 8&#58; Implementazione dell'Integrazione Continua con le Azioni di GitHub
  #### Lezioni
  - Azioni GitHub
  - Integrazione Continua con le Azioni GitHub
  - Mettere in sicurezza i segreti per le azioni di GitHub
  
  #### Laboratorio &#58; Integrazione continua delle Azioni GitHub
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Creare e lavorare con le Azioni GitHub e i flussi di lavoro
  - Implementare l'Integrazione Continua con le Azioni di GitHub
  
  
  ### Modulo 9&#58; Progettazione e Realizzazione di una Strategia di Gestione delle Dipendenze
  #### Lezioni
  - Dipendenze di imballaggio
  - Gestione dei pacchetti
  - Migrazione e consolidamento degli Artefatti
  - Sicurezza dei Pacchetti
  - Implementazione di una Strategia di Versioning
  
  #### Laboratorio &#58; Gestione dei pacchetti con Azure Artifacts
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Raccomandare strumenti e pratiche di gestione degli artefatti
  - Astrarre pacchetti comuni per consentire la condivisione e il riutilizzo
  - Migrazione e consolidamento degli Artefatti
  - Migrazione e integrazione delle misure di controllo delle fonti
  
  
  ### Modulo 10&#58; Progettazione di una Strategia di Rilascio
  #### Lezioni
  - Introduzione alla Consegna Continua
  - Raccomandazioni sulla strategia di rilascio
  - Costruire una pipeline di rilascio di alta qualità
  - Scegliere il giusto Strumento di Gestione del Rilascio
  
  #### Laboratorio &#58; Controllo delle implementazioni utilizzando i Release Gates
  
  #### Laboratorio &#58; Creazione di una Dashboard di rilascio
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Differenziare tra un rilascio e un'implementazione
  - Definire i componenti di una pipeline di rilascio
  - Spiegare ciò che va considerato quando si progetta una strategia di rilascio
  - Classificare un rilascio rispetto al processo, e indicazioni sul controllo qualità
  - Descrivere il principio dei release gates e come trattare le note di rilascio e la relativa documentazione
  - Scegliere il giusto Strumento di Gestione del Rilascio
  
  
  ### Modulo 11&#58; Implementazione dell'integrazione continua con Azure Pipeline
  #### Lezioni
  - Creazione di una Pipeline di Rilascio
  - Fornitura e configurazione degli Ambienti
  - Gestione e Modulazione di Compiti e Modelli
  - Configurazione dell'integrazione automatica e l'Automazione dei Test Funzionali
  - Automatizzazione dell'ispezione sanitaria
  
  #### Laboratorio &#58; Configurazione delle Pipeline come Codice con YAML
  
  #### Laboratorio &#58; Impostazione ed esecuzione dei Test Funzionali
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Spiegare la terminologia utilizzata su Azure DevOps e altri Strumenti per la Gestione del rilascio
  - Descrivere cos'è un compito di Build and Release, cosa può fare, e alcuni compiti di distribuzione disponibili
  - Spiegare il motivo per cui a volte sono necessari più lavori di rilascio in un'unica release pipeline
  - Differenziare tra il lavoro di rilascio multi-agente e multi-configurazione
  - Utilizzare le variabili di rilascio e le variabili di fase nella propria pipeline di rilascio
  - Distribuirsi in un ambiente in sicurezza utilizzando una connessione di servizio
  - Elencare i diversi modi per ispezionare lo stato di salute della Pipeline e il rilascio utilizzando avvisi, hook di servizio e report
  
  
  ### Modulo 12&#58; Implementazione di un modello di distribuzione adeguato
  #### Lezioni
  - Introduzione agli Schemi di Distribuzione
  - Implementazione del Blue Green Deployment
  - Attivazione o disattivazione delle Funzionalità
  - Versioni Canary
  - Release al buio
  - Test AB
  - Distribuzione ad Esposizione Progressiva
  
  #### Laboratorio &#58; Gestione Feature Flag con LaunchDarkly e Azure DevOps
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Descrivere i modelli di distribuzione
  - Implementazione del Blue Green Deployment
  - Implementazione Versioni Canary
  - Implementazione della Distribuzione ad Esposizione Progressiva
  
  
  ### Modulo 13&#58; Gestione dell'infrastruttura e della Configurazione con gli strumenti Azure Tools
  #### Lezioni
  - Infrastruttura come Codice e Gestione della Configurazione
  Creazione di Risorse Azure utilizzando modelli ARM
  - Creare Risorse Azure Azure CLI
  - Automazione Azure con DevOps
  - Configurazione dello stato desiderato (DSC)
  
  
  #### Laboratorio &#58; Installazioni di Azure che utilizzano Resource Manager Templates
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Applicare l'infrastruttura e la configurazione come principi di codice.
  - Implementare e gestire l'infrastruttura utilizzando le tecnologie di automazione Microsoft come i modelli ARM, PowerShell e Azure CLI
  
  
  ### Modulo 14&#58; Infrastrutture di terze parti come strumenti di codice disponibili con Azure
  #### Lezioni
  - Chef
  - Puppet
  - Ansible
  - Terraform
  
  #### Laboratorio &#58; Automatizzare le installazioni di infrastrutture su Cloud con Terraform e Azure Pipelines
  
  #### Laboratorio &#58; Distribuzione di applicazioni con Chef su Azure
  
  #### Laboratorio &#58; Deploy App con Puppet on Azure
  
  #### Laboratorio &#58; Ansible con Azure
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Implementare e configurare l'infrastruttura utilizzando strumenti e servizi di terze parti con Azure, come Chef, Puppet, Ansible e Terraform
  
  
  ### Modulo 15&#58; Gestione dei container con Docker
  #### Lezioni
  - Implementazione di una strategia di costruzione di container
  - Implementazione di strutture multistadio Docker
  
  #### Laboratorio &#58; Modernizzare le applicazioni ASP.NET esistenti con Azure
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Implementare una strategia di container che includa come i container siano diversi dalle macchine virtuali e come i microservizi utilizzano i container
  - Implementare i container utilizzando Docker
  - Implementare di strutture multistadio Docker
  
  
  ### Modulo 16&#58; Creazione e gestione dell'infrastruttura di servizio Kubernetes
  #### Lezioni
  - Azure Kubernetes Service
  - Strumentazione di Kubernetes
  - Integrazione di AKS con le Pipelines
  
  #### Laboratorio &#58; Distribuzione di un'applicazione multi-container in Azure Kubernetes Service
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Implementare e configurare un cluster Kubernetes gestito 
  
  
  ### Modulo 17&#58; Implementazione del feedback per i team di sviluppo
  #### Lezioni
  - Implementare strumenti per tracciare l'uso del sistema, l'uso delle funzioni e il flusso
  - Implementare il Routing per i dati dei rapporti di crash delle applicazioni mobili
  - Sviluppare il Monitoraggio e le Dashboard di Status
  - Integrare e configurare i sistemi di Ticketing
  
  #### Laboratorio &#58; Monitoraggio delle prestazioni delle applicazioni con approfondimenti sulle applicazioni
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Implementare strumenti per tracciare l'uso del sistema, l'uso delle funzioni e il flusso
  - Configurare l'integrazione dei rapporti di crash per le applicazioni client
  - Implementare il routing per i dati del rapporto di crash dell'applicazione client
  - Sviluppare Dashboard di monitoraggio e di stato
  - Integrare e configurare i sistemi di Ticketing con la gestione del lavoro del team di sviluppo
  
  
  ### Modulo 18&#58; Implementazione dei Meccanismi di Feedback del Sistema
  #### Lezioni
  - Progettazione dell'affidabilità del Sito 
  - Pratiche di progettazione per misurare la soddisfazione dell'utente finale
  - Processi di progettazione per catturare e analizzare il feedback degli utenti
  - Processi di progettazione per automatizzare l'analisi delle applicazioni
  - Gestione degli allarmi
  - Retrospettive Blameless e una cultura giusta
  
  #### Laboratorio &#58; Integrazione tra Azure DevOps e Teams
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Definire la Progettazione dell'Affidabilità del Sito
  - Design di processi per misurare la soddisfazione dell'utente finale e analizzare il feedback degli utenti
  - Design di processi per automatizzare l'analisi delle applicazioni
  - Gestire le segnalazioni e ridurre le segnalazioni prive di significato e non attuabili
  - Realizzare retrospettive e creare una cultura giusta
  
  
  ### Modulo 19&#58; Implementazione della sicurezza nei Progetti DevOps
  #### Lezioni
  - Sicurezza nel Pipeline
  - Azure Security Center
  
  #### Laboratorio &#58; Implementare la sicurezza e la conformità in una Azure DevOps Pipeline
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Definire un'infrastruttura, una strategia di configurazione e un set di strumenti appropriati per una pipeline di rilascio e un'infrastruttura di applicazioni
  - Implementare la conformità e la sicurezza nella propria infrastruttura applicativa
  
  
  ### Modulo 20&#58; Convalida delle basi del codice per la conformità
  #### Lezioni
  - Software Open-Source
  - Gestione delle Politiche di Sicurezza e Conformità
  - Integrazione di Scansioni di Licenze e Vulnerabilità
  
  #### Laboratorio &#58; Gestione del debito tecnico con SonarQube e Azure DevOps
  
  Il completamento del modulo fornirà le capacità necessarie per&#58;
  - Descrizione delle potenziali sfide dell'integrazione del software open-source
  - Ispezione dei pacchetti software open-source per la sicurezza e la conformità delle licenze
  - Gestire le politiche di sicurezza organizzativa e di conformità
  - Integrare le scansioni delle licenze e delle vulnerabilità nelle pipeline di build e distribuzione
  - Configurare le pipeline di build per accedere alla sicurezza dei pacchetti e alle classificazioni delle licenze